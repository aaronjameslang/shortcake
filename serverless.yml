service: shortcake

plugins:
- serverless-domain-manager

provider:
  name: aws
  runtime: nodejs10.x
# stage: dev
# region: us-east-1
  iamRoleStatements:
  - Effect: Allow
    Action: secretsmanager:GetSecretValue
    Resource: { Ref: secret0 }

functions:
  function0:
    description: ${self:service}@${env:VERSION}
    handler: src/index.handler
    environment:
      SECRET_ID: ${self:service}-${self:provider.stage}
      SECRET_REGION: ${self:provider.region}
    events:
      - http: POST /shortening
      - http:
          method: GET
          path: /shortening/{slug}
          request:
            parameters:
              paths:
                slug: true
      - http:
          method: GET
          path: /{slug}
          request:
            parameters:
              paths:
                slug: true

custom:
  customDomain:
    domainName: s.ajla.ng # TODO not stage specific
    certificateName: ${self:service}.ajla.ng

resources:
  Resources:
    ApiGatewayRestApi:
      Type: AWS::ApiGateway::RestApi
      Properties:
        Name: ${self:service}-${self:provider.stage}
    secret0:
      Type: AWS::SecretsManager::Secret
      Properties:
        Name: ${self:service}-${self:provider.stage}
        SecretString: "{\"change\":\"me\"}"
    # db0:
    #   Type: AWS::RDS::DBInstance
    #   Properties:
    #     AllocatedStorage: 20
    #     DBInstanceClass: db.t3.micro
    #     Engine: postgres
    #     MasterUserPassword: ${env:DB_PASSWORD}
    #     MasterUsername: ${env:DB_USERNAME}
    #     PubliclyAccessible: true
    userCi:
      Type: AWS::IAM::User
      Properties:
        Policies:
          - PolicyDocument:
              Statement:
                Effect: Allow
                Action: secretsmanager:GetSecretValue
                Resource: { Ref: secret0 }
            PolicyName: shortcake-ci
        UserName: shortcake-ci
